import React, { useEffect, useState } from "react";
import Button from "../components/Button";
import Header from "../components/Header";
import bridge from '@vkontakte/vk-bridge';

import arc1 from '../assets/images/Arc-green.svg'
import arc2 from '../assets/images/arc-yellow.svg'
import arc3 from '../assets/images/arc-red.svg'
import arc4 from '../assets/images/arc-blue.svg'
import ArrDown from '../assets/images/arrow-d.png'
import API from "../utils/API";
import Loader from "../components/Loader";
import FinalCard from "../components/FinalCard";
import img from '../assets/images/576.jpg'
import { finalUrl, vk_link } from "../constants/link";



const Result = ({ setPage, reciever, vk_id, greeting, setLoading, showMessage, showMessageAdditional, setPoints, points, card_url, limit }) => {

    let mobile = window.innerWidth < 740
    useEffect(() => {
        setLoading(false)
    }, [])
    const send = () => {
        if (mobile) {
            bridge.send('VKWebAppShare', {
                link: finalUrl(card_url, color)
            })
                .then((data) => {
                    setLoading('–°–ø–∞—Å–∏–±–æ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞–Ω–∏–µ');

                    if (data.result) {
                        setLoading(false)
                        API.post('/share/private', { vk_id: vk_id })
                            .then(response => {
                                if (response.data.success) {
                                    if (response.data.limit) {
                                        showMessage('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!')
                                        showMessageAdditional('–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–∞–ª–ª—ã –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—èüòä')
                                    }
                                    else {
                                        showMessage('–£—Ä–∞! –ú—ã –Ω–∞—á–∏—Å–ª–∏–ª–∏ –≤–∞–º –±–∞–ª–ª—ã')
                                        showMessageAdditional(`–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${response.data.points - points} –±–∞–ª–ª–æ–≤`);
                                    }
                                }
                                else {
                                    showMessage('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
                                    showMessageAdditional('–ù–∞–º –Ω–µ —É–¥–æ–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
                                }
                            })
                            .catch(err => {
                                showMessage('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
                                showMessageAdditional('–ù–∞–º –Ω–µ —É–¥–æ–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
                            })
                    }
                })
                .catch((error) => {
                    showMessage('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
                    showMessageAdditional('–ù–∞–º –Ω–µ —É–¥–æ–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
                    console.log(error);
                });
        } else {
            document.getElementsByClassName('vk-share')[0].append(
                window.VK.Share.button({
                    url: finalUrl(card_url, color),
                    title: `–õ—É—á—à–∏–π –ø–æ–¥–∞—Ä–æ–∫ - —ç—Ç–æ –∑–∞–±–æ—Ç–∞! ${greeting}`,
                    image: finalUrl(card_url, color),
                    noparse: true
                }))
            window.VK.Share.click(0, this)
            setTimeout(() => {
                API.post('/share/private', { vk_id: vk_id })
                    .then(res => {
                        if (res.data.success) {
                            if (res.data.limit) {
                                showMessage('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!')
                                showMessageAdditional('–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–∞–ª–ª—ã –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—èüòä')
                            }
                            else {
                                showMessage('–£—Ä–∞! –ú—ã –Ω–∞—á–∏—Å–ª–∏–ª–∏ –≤–∞–º –±–∞–ª–ª—ã')
                                showMessageAdditional(`–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${res.data.points - points} –±–∞–ª–ª–æ–≤`);
                            }
                            setPoints(res.data.points)
                        }
                        else {
                            showMessage('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
                            showMessageAdditional('–ù–∞–º –Ω–µ —É–¥–æ–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
                        }
                    })
                    .catch(err => {
                        showMessage('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
                        showMessageAdditional('–ù–∞–º –Ω–µ —É–¥–æ–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
                    })
            }, 17000)

        }

    }
    const shareOnTheWall = () => {
        console.log(finalUrl(card_url, color))
        const process = mobile ? 'VKWebAppShowWallPostBox' : 'VKWebAppShare';
        let attachments = mobile ? {
            message: `–õ—É—á—à–∏–π –ø–æ–¥–∞—Ä–æ–∫ - —ç—Ç–æ –∑–∞–±–æ—Ç–∞! ${greeting}`,
            attachments: finalUrl(card_url, color)
        } : {
            link: finalUrl(card_url, color)
        };


        bridge.send(process, attachments)
            .then((data) => {
                setLoading('–°–ø–∞—Å–∏–±–æ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–ø–æ—Å—Ç');
                let checkObj = mobile ? data.post_id : data.result
                if (checkObj) {
                    setLoading(false)
                    API.post('/share/public', { vk_id: vk_id })
                        .then(response => {
                            if (response.data.success) {
                                if (response.data.limit) {
                                    showMessage('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!')
                                    showMessageAdditional('–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–∞–ª–ª—ã –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—èüòä')
                                }
                                else {
                                    showMessage('–£—Ä–∞! –ú—ã –Ω–∞—á–∏—Å–ª–∏–ª–∏ –≤–∞–º –±–∞–ª–ª—ã')
                                    showMessageAdditional(`–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${response.data.points - points} –±–∞–ª–ª–æ–≤`)
                                }

                            }
                            else {
                                showMessage('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
                                showMessageAdditional('–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
                            }
                        })
                        .catch(error => {
                            console.log(error)
                            showMessage('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
                            showMessageAdditional('–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
                        })
                }
                else {
                    showMessage('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
                    showMessageAdditional('–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
                }
            })
            .catch((error) => {
                // –û—à–∏–±–∫–∞
                console.log(error);
            });

    }



    const colors = [
        { col: "green", arc: arc1 },
        { col: "yellow", arc: arc2 },
        { col: "red", arc: arc3 },
        { col: "blue", arc: arc4 },
    ];
    const [index, setInd] = useState(0);
    const [color, setColor] = useState(colors[index].col);
    const [bg, setBg] = useState(colors[index].arc);
    const [zoomedCard, setBigCard] = useState(false)
    const zoom = (action) => {
        setBigCard(action)
    }
    return (
        <main className="blue-bg min-[766px]:px-8 px-4 pb-6 min-[766px]:pb-8 pt-20 main">
            <div className="flex gap-4 flex-wrap">
                <div className="flex-auto min-[766px]:w-32 w-full relative">
                    <Header text={'<span class="text-white">–°–µ—Ä–¥–µ—á–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!</span>'}
                        size="text-3xl font-white text-left" />
                    {limit ?
                        <p className="mt-4 text-white moris ">
                            –î–µ–ª–∏—Ç–µ—Å—å –∑–∞–±–æ—Ç–æ–π —Å –±–ª–∏–∑–∫–∏–º–∏ –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø—Ä–∏–∑–æ–≤
                        </p>
                        :
                        <p className="mt-4 text-white moris ">
                            –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ <span className="text-yellow">10 –±–∞–ª–ª–æ–≤ </span><br />
                            –∏ –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å<br /> —Å–≤–æ–∏ –±–∞–ª–ª—ã.
                        </p>
                    }
                    <div className="absolute arrow-d left-6 mx-auto bottom-8 w-fit sm:block hidden" style={{ maxWidth: '85%' }}>
                        <img src={ArrDown} />
                    </div>
                </div>
                <FinalCard zoomedCard={zoomedCard} bigCard={false} zoom={zoom} bg={bg} color={color} reciever={reciever} greeting={greeting} colors={colors} setInd={setInd} index={index} setColor={setColor} setBg={setBg} />
            </div>



            <div className="grid min-[766px]:grid-cols-3 min-[766px]:gap-2 gap-4 min-[766px]:mt-4 mt-8">
                <div className="rounded-lg text-center p-4 flex flex-col justify-between text-blue bg-white hover:scale-105 transition ease-in-out duration-300 cursor-pointer">
                    <Header text="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å<br/>–∫–∞—Ä—Ç–æ—á–∫–æ–π" size={'text-xl'} />
                    <p className="text-reg text-sm -mt-3"> –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ —Ä–µ–ø–æ—Å—Ç, —á—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –±–∞–ª–ª—ã  </p>
                    <Button onClick={() => {
                        send()
                    }} classes="bg-yellow rounded-full p-3 w-full text-center font-bold text-sm mt-4" text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ –õ–° | +10" />
                    <Button onClick={() => {
                        shareOnTheWall()
                    }} classes="bg-yellow rounded-full p-3 w-full text-center font-bold text-sm mt-2" text="–°–¥–µ–ª–∞—Ç—å —Ä–µ–ø–æ—Å—Ç | +10" />
                </div>
                <div className="rounded-lg text-center p-4 flex flex-col justify-between text-blue bg-lightGreen hover:scale-105 transition ease-in-out duration-300 cursor-pointer">
                    <Header text="–ü—Ä–æ—è–≤–∏ –∑–∞–±–æ—Ç—É" size={'text-xl'} />
                    <p className="text-reg text-sm -mt-3">–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ, –æ–ø—É–±–ª–∏–∫—É–π—Ç–µ —Ñ–æ—Ç–æ —Å —Ö—ç—à—Ç–µ–≥–æ–º #—Å–µ—Ä–¥–µ—á–Ω–æ–ø–æ–∑–¥—Ä–∞–≤–ª—è—é
                        –∏ –ø–æ–ª—É—á–∏—Ç–µ 100 –±–∞–ª–ª–æ–≤</p>
                    <Button onClick={() => { setPage('task') }} classes="bg-blue text-white rounded-full p-3 w-full text-center font-bold text-sm mt-4" text="–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å | +100" />
                </div>
                <div className="rounded-lg text-center p-4 flex flex-col justify-between text-blue bg-white hover:scale-105 transition ease-in-out duration-300 cursor-pointer">
                    <Header text="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ —Å–≤–æ–π<br/>–≤–∞—Ä–∏–∞–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏" size={'text-xl'} />
                    <p className="text-reg text-sm -mt-3">–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ç–µ–∫—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 150 –±–∞–ª–ª–æ–≤</p>
                    <Button onClick={() => { setPage('propose') }} classes="bg-yellow rounded-full p-3 w-full text-center font-bold text-sm mt-4" text="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å | +30" />
                </div>
                <div className="hidden vk-share"></div>
            </div>
            {zoomedCard ?
                <div className="loader z-40 fin"  onClick={() => { zoom(false); }}>
                    <div className="cancel-b absolute top-16 right-24 text-blue cursor-pointer bg-blue-100 rounded-lg hover:bg-blue-200" onClick={() => { zoom(false); }}>
                        <svg className="w-8 h-8" fill="none" stroke="currentColor" strokeWidth="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </div>
                    <FinalCard zoomedCard={zoomedCard} bigCard={true} zoom={zoom} bg={bg} color={color} reciever={reciever} greeting={greeting} colors={colors} setInd={setInd} index={index} setColor={setColor} setBg={setBg} />
                </div> : false}
        </main >
    )
}

export default Result;