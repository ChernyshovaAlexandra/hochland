import React, { useState } from "react";
import Button from "../components/Button";
import Header from "../components/Header";
import bridge from '@vkontakte/vk-bridge';

import ArrT from '../assets/images/arrT.svg'
import ArrB from '../assets/images/arrB.svg'
import img1 from '../assets/images/family.png'
import img2 from '../assets/images/collegue.png'
import img3 from '../assets/images/friends.png'
import img4 from '../assets/images/lover.png'
import arc1 from '../assets/images/Arc-green.svg'
import arc2 from '../assets/images/arc-yellow.svg'
import arc3 from '../assets/images/arc-red.svg'
import arc4 from '../assets/images/arc-blue.svg'
import ArrDown from '../assets/images/arrow-d.png'
import API from "../utils/API";


const images = {
    family: img1,
    collegue: img2,
    friends: img3,
    lover: img4
}



const Result = ({ setPage, reciever, vk_id, matter, setLoading }) => {
    const [imgGen, generateImg] = useState(null)



    const send = () => {
        document.getElementsByClassName('vk-share')[0].append(window.VK.Share.button({
            url: 'https://localhost:3000',
            title: "–ú–æ—è –∑–∞–±–æ—Ç–∞ –æ —Ç–µ–±–µ",
            image: 'https://bali.top/storage/images/Post/100/img-0766.jpeg',
            noparse: true

        }))
        window.VK.Share.click(0, this);

    }
    const shareOnTheWall = () => {
        bridge.send('VKWebAppShare', {
            link: 'https://vk.com/vkappsdev'
        })
            .then((data) => {
                if (data.result) {
                    // –ó–∞–ø–∏—Å—å —Ä–∞–∑–º–µ—â–µ–Ω–∞
                }
            })
            .catch((error) => {
                // –û—à–∏–±–∫–∞
                console.log(error);
            });

    }

    const prepareImage = (place) => {
        setLoading('–£—Ä–∞! –ú—ã –≥–æ—Ç–æ–≤–∏–º<br/>–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ üòä')
        API.post('/generate', {
            vk_id: vk_id,
            person: reciever,
            category: matter
        })
            .then(
                response => {
                    if (response.data.success) {
                        generateImg(response.data.image_url);
                    }
                }
            )
    }

    const colors = [
        { col: "green", arc: arc1 },
        { col: "yellow", arc: arc2 },
        { col: "red", arc: arc3 },
        { col: "blueL", arc: arc4 },
    ];
    const [index, setInd] = useState(0);
    const [color, setColor] = useState(colors[index].col);
    const [bg, setBg] = useState(colors[index].arc)

    const arrTop = () => {
        if (index == 0) { setInd(colors.length - 1) } else { setInd(index - 1) }
        setColor(colors[index].col);
        setBg(colors[index].arc);
    }
    const arrDown = () => {
        if (index == colors.length - 1) { setInd(0) } else { setInd(index + 1) }
        setColor(colors[index].col);
        setBg(colors[index].arc);
    }
    return (
        <main className="blue-bg min-[766px]:px-8 px-4 pb-6 min-[766px]:pb-8 pt-20 main">
            <div className="flex gap-4 flex-wrap">
                <div className="flex-auto min-[766px]:w-32 w-full relative">
                    <Header text={'<span class="text-yellow">–°—ã—Ä</span><span class="text-white">–¥–µ—á–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!</span>'}
                        size="text-3xl font-white text-left" />
                    <p className="mt-4 text-white moris ">
                        –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ <span className="text-yellow">10 –±–∞–ª–ª–æ–≤ </span><br />
                        –∏ –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å<br /> —Å–≤–æ–∏ –±–∞–ª–ª—ã.

                    </p>
                    <div className="absolute arrow-d left-6 mx-auto bottom-8 w-fit sm:block hidden">
                        <img src={ArrDown} />
                    </div>
                </div>
                <div className="min-[766px]:w-72 final-pic">
                    <div className="bg-white border-4 with-logo border-white rounded-lg overflow-hidden w-full text-center ">
                        <div className={`image-frame bg-${color}-res relative w-full h-64 -mt-6`}>
                            <img src={bg} className='absolute mx-auto bottom-0 w-11/12 left-0 right-0 ' alt="" />
                            <img src={images[reciever]} alt="" className="absolute mx-auto bottom-0 w-10/12 left-0 right-0" />
                            <div className={`absolute -bottom-6 border-2 border-white bg-${color}-res text-white rounded-full left-0 w-fit right-0 mx-auto px-4 moris pt-2 pb-1`}>
                                <span className="text-yellow" style={{ lineheight: '1.8' }}>–°—ã—Ä</span>–¥–µ—á–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º</div>
                        </div>
                        <div className="p-3 mt-4">
                            <span className="text-blue mx-auto">
                                <span className="moris font-bold ">
                                    –õ—É—á—à–∏–π –ø–æ–¥–∞—Ä–æ–∫ - <span className={`text-${color}`}>—ç—Ç–æ –∑–∞–±–æ—Ç–∞!</span><br />
                                    –∞ –∑–∞–±–æ—Ç–∞ —Å –•–æ—Ö–ª–∞–Ω–¥ —ç—Ç–æ‚Ä¶<br />
                                </span>
                                <div className="font-bold mt-2 text-xs">
                                    ...—ç—Ç–æ –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Ä–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã
                                    –¥–æ–º–∞—à–Ω–∏–º–∏ –±—É—Ä–≥–µ—Ä–∞–º–∏ —Å –ø–ª–∞–≤–ª–µ–Ω—ã–º
                                    —Å—ã—Ä–æ–º Hochland</div>
                            </span>
                        </div>
                    </div>
                </div>
                <div className="min-[766px]:w-16 self-center">
                    <div className="bg-white rounded-xl p-4 grid gap-y-3 h-fit place-items-center mb-4 arr cursor-pointer" onClick={arrTop}>
                        <img className="min-[766px]:w-6 w-4 min-[766px]:h-6 h-4 object-content object-center " src={ArrT} alt="" />
                    </div>
                    <div className="bg-white rounded-xl p-4 grid gap-y-3 h-fit place-items-center">
                        {
                            colors.map((col, id) => (
                                <div
                                    key={id}
                                    onClick={() => { setColor(col.col); setInd(id); setBg(col.arc) }}
                                    className={`rounded-full w-6 mx-auto cursor-pointer h-6 bg-${col.col} ${color === col.col ? 'active' : ''}`}></div>
                            ))
                        }

                    </div>
                    <div className="bg-white rounded-xl p-4 grid gap-y-3 h-fit place-items-center mt-4 arr cursor-pointer" onClick={arrDown}>
                        <img className="min-[766px]:w-6 w-4 min-[766px]:h-6 h-4 object-content object-center " src={ArrB} alt="" />
                    </div>
                </div>
            </div>



            <div className="grid min-[766px]:grid-cols-3 min-[766px]:gap-2 gap-4 min-[766px]:mt-4 mt-8">
                <div className="rounded-lg text-center p-4 flex flex-col justify-between text-blue bg-white">
                    <Header text="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å<br/>–∫–∞—Ä—Ç–æ—á–∫–æ–π" size={'text-xl'} />
                    <p className="text-reg text-sm -mt-3"> –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–∞—Ä—Ç–æ—á–∫–æ–π –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ —Ä–µ–ø–æ—Å—Ç, —á—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –±–∞–ª–ª—ã  </p>
                    <Button onClick={() => { prepareImage("message") }} classes="bg-yellow rounded-full p-3 w-full text-center font-bold text-sm mt-4" text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ –õ–° | +10" />
                    <Button onClick={() => { prepareImage("wall") }} classes="bg-yellow rounded-full p-3 w-full text-center font-bold text-sm mt-2" text="–°–¥–µ–ª–∞—Ç—å —Ä–µ–ø–æ—Å—Ç | +10" />
                </div>
                <div className="rounded-lg text-center p-4 flex flex-col justify-between text-blue bg-lightGreen">
                    <Header text="–ü—Ä–æ—è–≤–∏ –∑–∞–±–æ—Ç—É" size={'text-xl'} />
                    <p className="text-reg text-sm -mt-3">–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ, –æ–ø—É–±–ª–∏–∫—É–π—Ç–µ —Ñ–æ—Ç–æ —Å —Ö—ç—à—Ç–µ–≥–æ–º #—Å–´—Ä–¥–µ—á–Ω–æ–ø–æ–∑–¥—Ä–∞–≤–ª—è—é
                        –∏ –ø–æ–ª—É—á–∏—Ç–µ 100 –±–∞–ª–ª–æ–≤</p>
                    <Button onClick={() => { setPage('task') }} classes="bg-blue text-white rounded-full p-3 w-full text-center font-bold text-sm mt-4" text="–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å | +100" />
                </div>
                <div className="rounded-lg text-center p-4 flex flex-col justify-between text-blue bg-white">
                    <Header text="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ —Å–≤–æ–π<br/>–≤–∞—Ä–∏–∞–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏" size={'text-xl'} />
                    <p className="text-reg text-sm -mt-3">–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ç–µ–∫—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 150 –±–∞–ª–ª–æ–≤</p>
                    <Button onClick={() => { setPage('propose') }} classes="bg-yellow rounded-full p-3 w-full text-center font-bold text-sm mt-4" text="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å | +30" />
                </div>
                <div className="hidden vk-share"></div>
            </div>
        </main >
    )
}

export default Result;